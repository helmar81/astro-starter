---
import Layout from '../layouts/Layout.astro';


---







<Layout title="Random Fact | Astro Vibes">
  <div id="fact-container" class="bg-gradient-to-br from-yellow-100 to-purple-100 rounded-xl shadow-inner p-4 sm:p-8">
    <h2 class="text-xl sm:text-2xl font-bold mb-2">ðŸ‘¤ A Name</h2>
    <p id="person" class="text-lg text-fuchsia-700 font-medium">Loading...</p>

    <h2 class="text-xl sm:text-2xl font-bold mt-4 mb-2">ðŸ“˜ A Fact</h2>
    <p id="fact" class="text-lg text-blue-700 font-medium">Loading...</p>

    <button onclick="refreshFact()" class="mt-6 bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded">
      ðŸ”„ New Fact
    </button>
    
    <button onclick="window.location.href='/'" class="mt-2 ml-4 bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded">
      â¬… Back to Start
    </button>
  </div>

  <script>
    // Extend the Window interface to include refreshFact
    declare global {
      interface Window {
        refreshFact: () => void;
      }
    }

    async function refreshFact() {
      const res = await fetch('/api/fact');
      const data = await res.json();
      const factElement = document.getElementById('fact');
      if (factElement) {
        factElement.textContent = data.fact;
      }
      const personElement = document.getElementById('person');
      if (personElement) {
        personElement.textContent = data.name;
      }
    }

    // Attach to window to make it globally accessible
    window.refreshFact = refreshFact;

    // Initial fetch
    refreshFact();
  </script>

  <script>
    async function refreshFact() {
      const res = await fetch('/api/random');
      const data = await res.json();
      const factElement = document.getElementById('fact');
      if (factElement) {
        factElement.textContent = data.fact;
      }
      const personElement = document.getElementById('person');
      if (personElement) {
        personElement.textContent = data.name;
      }
    }

    // Initial fetch
    refreshFact();
  </script>


<footer class="mt-12 text-center text-sm text-gray-600 dark:text-gray-400 animate-fadeIn">
  <div class="py-4 px-6 bg-gradient-to-r from-purple-300 via-pink-300 to-yellow-300 rounded-2xl shadow-lg border border-fuchsia-500 max-w-2xl mx-auto">
    <p class="font-medium text-gray-900 dark:text-white">
      ðŸ”® Made with cosmic vibes by <span class="text-fuchsia-700 font-bold">@Helmar</span>
    </p>
    <p class="mt-1">
      ðŸš€ Powered by <a href="https://uspekhi.web.app" target="_blank" class="underline hover:text-purple-800 transition-colors">USPEKHI</a> + <a href="https://uspekhi.web.app" target="_blank" class="underline hover:text-yellow-600 transition-colors">Tailwind CSS</a>
    </p>
    <div class="mt-2 text-lg animate-pulse">
      ðŸŒˆ Stay groovy!
    </div>
  </div>

  <style>
    body::before {
      content: "";
      position: fixed;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      background: transparent url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%'><circle cx='2' cy='2' r='1.5' fill='white' opacity='0.6'/></svg>") repeat;
      animation: twinkle 8s infinite alternate ease-in-out;
      z-index: 0;
      pointer-events: none;
    }
  
    @keyframes twinkle {
      0% { opacity: 0.4; transform: translateY(0px); }
      100% { opacity: 1; transform: translateY(-10px); }
    }
  
    body > * {
      position: relative;
      z-index: 1;
    }

    @media (prefers-color-scheme: dark) {
body::before {
  opacity: 0.8;
}
}
  </style>
</footer>
</Layout>
